<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Spring on 赵坤的个人网站</title>
    <link>https://kunzhao.org/tags/spring/</link>
    <description>Recent content in Spring on 赵坤的个人网站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 10 Aug 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://kunzhao.org/tags/spring/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Spring Boot</title>
      <link>https://kunzhao.org/posts/springboot/</link>
      <pubDate>Mon, 10 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kunzhao.org/posts/springboot/</guid>
      <description>Spring Boot 提供了两个接口 CommandLineRunner 和 ApplicationRunner，用以当 Spring Boot 应用程序完全启动之前运行指定的代码。
CommandLineRunner @Component public class CommandLineAppStartupRunner implements CommandLineRunner { private static final Logger logger = LoggerFactory.getLogger(CommandLineAppStartupRunner.class); @Override public void run(String...args) throws Exception { logger.info(&amp;#34;Application started with command-line arguments: {} . \n To kill this application, press Ctrl + C.&amp;#34;, Arrays.toString(args)); } } ApplicationRunner 将参数封装为一个对象，可以调用 getOptionNames()、getOptionValues() 和 getSourceArgs() 等便捷的方法。
@Component public class AppStartupRunner implements ApplicationRunner { private static final Logger logger = LoggerFactory.getLogger(AppStartupRunner.class); @Override public void run(ApplicationArguments args) throws Exception { logger.</description>
    </item>
    
  </channel>
</rss>
