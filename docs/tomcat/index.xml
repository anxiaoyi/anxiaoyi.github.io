<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tomcat 源码分析 on 赵坤的个人网站</title>
    <link>https://kunzhao.org/docs/tomcat/</link>
    <description>Recent content in Tomcat 源码分析 on 赵坤的个人网站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    
	<atom:link href="https://kunzhao.org/docs/tomcat/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Tomcat 主体架构</title>
      <link>https://kunzhao.org/docs/tomcat/tomcat-architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kunzhao.org/docs/tomcat/tomcat-architecture/</guid>
      <description>Tomcat 主体架构 本篇讲述 Tomcat 的主体架构，在描述架构之前，会首先向大家介绍 Servlet 是什么，以及 Servlet 容器又是什么等相关概念。
Servlet 是什么 一句话：Servlet 是一个实现了 javax.servlet.Servlet 接口的类，该类由 Servlet 容器进行统一管理。在该接口中，其定义了所有 Servlet 实现类必须实现的几个方法：
 init(ServletConfig config) service(ServletRequest request, ServletResponse response) destroy() getServletConfig() getServletInfo()  Servlet 是 Java 为 Web 开发者们所制定的一套标准，一个规范，其当前已经发展到了最新的 3.0 版本。从 Servlet 接口中，我们可以看出，service 方法提供了 request 对象和 response 对象，该方法是用来处理客户端逻辑的核心方法，客户端发送过来的请求信息会被封装到 request 对象中，开发者在该方法内，可以通过 response 对象，将想要输出给客户端的信息发送出去。
Servlet 容器是什么 Servlet 容器是一个可以用来管理多个 Servlet 对象的可以处理用户请求的容器。其根据 Servlet 标准规范，来决定如何解析用户请求，何时调用某个 Servlet 的 init、service、destroy 等方法，以及如何支持 HTTP 协议等。更进一步，其通常需要设计和支持的功能至少包含如下几个点：
 管理每一个 Servlet 的生命周期 解析 HTTP 请求的头部、参数、请求路径、编码等 为 Servlet 提供访问资源、存取参数等信息、虚拟主机等方法 请求路径映射 为响应提供 Buffer、重定向、如何添加头等 登录校验、缓存校验、数据格式校验等请求过滤器 Session 信息管理 注解能力 分发请求、转发请求、错误处理等 事件监听等 安全校验  Tomcat 整体架构 如图一个 Tomcat 实例，内部包含一个 Server 示例，这个 Server 又可以添加多个 Service，每一个 Service 包含一组 Connector 和一个 Container。</description>
    </item>
    
  </channel>
</rss>