<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DevOps on 赵坤的个人网站</title>
    <link>https://kunzhao.org/docs/tutorial/devops/</link>
    <description>Recent content in DevOps on 赵坤的个人网站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language><atom:link href="https://kunzhao.org/docs/tutorial/devops/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>DevOps 简介</title>
      <link>https://kunzhao.org/docs/tutorial/devops/intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kunzhao.org/docs/tutorial/devops/intro/</guid>
      <description>DevOps 简介 DevOps (Development 与 Operations) 是一种文化，这种文化旨在建立一个使得软件构建、测试、发布等得以快速、稳定，实施交付的环境。
那么如何做到快速？如何做到稳定？答案是自动化工具。开发到测试到上线之间的所有需要手动处理的环节，都是可以尝试优化的点。
DevOps 能力成熟度模型 全球首个 DevOps 标准，即《研发运营一体化（DevOps）能力成熟度模型》，由中国信息通信研究院牵头，云计算开源产业联盟、高效运维社区、 DevOps 时代社区联合 Google、BATJ、清华大学、南京大学、通信及金融等行业顶尖企事业单位专家共同制定。
目前很多公司都在参考这套模型进行实践。
DevOps 工具集锦 信通院整理的的 DevOps 工具集锦（看不清的话，图片上右击，在新标签页中打开图像）：
持续集成  每次提交代码，就会触发完整的流水线。这需要打通版本控制系统和持续集成系统，例如 GitLab 和 Jenkins 集成。 每次流水线，触发自动化测试。 出了问题，第一时间修复。  推荐书籍  《持续交付 2.0》 《DevOps 实践指南》  </description>
    </item>
    
  </channel>
</rss>
