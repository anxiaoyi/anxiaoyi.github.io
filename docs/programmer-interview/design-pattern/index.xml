<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>设计模式 on 赵坤的个人网站</title>
    <link>https://kunzhao.org/docs/programmer-interview/design-pattern/</link>
    <description>Recent content in 设计模式 on 赵坤的个人网站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language><atom:link href="https://kunzhao.org/docs/programmer-interview/design-pattern/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>观察者模式</title>
      <link>https://kunzhao.org/docs/programmer-interview/design-pattern/observer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kunzhao.org/docs/programmer-interview/design-pattern/observer/</guid>
      <description>观察者模式 JavaScript class EventObserver { constructor() { this.observers = []; } subscribe(fn) { this.observers.push(fn); } unsubscribe(fn) { this.observers = this.observers.filter((subscriber) =&amp;gt; subscriber !== fn); } broadcast(data) { this.observers.forEach((subscriber) =&amp;gt; subscriber(data)); } } 参考  The Observer Pattern JavaScript Design Patterns: The Observer Pattern  </description>
    </item>
    
  </channel>
</rss>
